---
description: 
globs: 
alwaysApply: true
---
# Java全栈工程师教材编写指南

## 项目概述
这是《Java全栈工程师之路：AI协同与企业级项目实战》教材的编写项目。教材采用Quarto Book格式，面向编程新手，强调AI协同编程。

## 核心理念
- **目标读者**：完全的编程新手
- **教学方法**：AI协同编程、项目驱动学习
- **技术特色**：突出Java的静态类型、OOP、JVM、并发能力和企业级生态
- **实践导向**：微项目 + 企业级宏项目的双重驱动

## 教材结构
参考 [目录.md](mdc:目录.md) 了解完整的章节架构：

### 第一部分：Java基础核心（章节1-6）
- 微项目驱动的系统性学习
- 从"个性化问候器"到"多线程下载模拟器"
- 循序渐进建立Java核心概念

### 第二部分：企业级项目实战（章节7-12）  
- "IntelliRecommend"智能内容平台项目
- 模拟敏捷开发流程
- 引入Git、Docker、单元测试等企业实践

## 编写风格要求

### 语言风格
- **对新手友好**：充满鼓励，善用类比，避免不必要的术语
- **技术严谨**：确保所有代码和概念的准确性
- **体现AI协同**：经常以"我们可以向AI提问..."或"AI可能会这样建议..."的口吻组织内容

### 内容结构
每个章节都应包含：
1. **情景引入**：以问题或挑战开始
2. **与AI的互动对话**：设计学生与AI编辑器的对话场景
3. **核心概念讲解**：清晰解释技术概念，突出Java特性
4. **代码实战与逐步完善**：提供完整、有详细注释的代码示例
5. **动手练习或挑战**：鼓励学生实践的练习题

## 编写提示词框架
详细的提示词模板请参考 [提示词.md](mdc:提示词.md)，包括：

- **主控提示词**：设定对话基调和背景
- **章节内容生成**：生成教学内容草稿
- **代码示例生成**：创建高质量教学代码
- **AI协同对话设计**：设计学生与AI的互动场景
- **企业实践深化**：引入企业级概念和实践
- **审校与优化**：改进和完善内容质量

## 代码规范

### Java代码要求
- 使用清晰、自解释的变量名和方法名
- 为关键代码添加详尽注释
- 体现Java最佳实践和标准代码风格
- 突出Java相对于其他语言的优势特性

### 示例格式
```java
// 详细注释说明代码功能
public class ExampleClass {
    // 成员变量说明
    private String name;
    
    // 构造方法注释
    public ExampleClass(String name) {
        this.name = name;
    }
}
```

## AI协同编程体现
- 在教学内容中自然融入AI工具的使用
- 展示如何向AI提问、请求代码生成、进行代码审查
- 强调人机协同的编程方式
- 将Cursor等AI编辑器作为学习伙伴进行介绍

## 企业实践模拟
在实战篇中重点体现：
- 敏捷开发流程（Scrum、Sprint）
- 版本控制（Git工作流）
- 容器化部署（Docker）
- 代码质量保证（单元测试、Code Review）
- 安全实践（Spring Security）
- 文档规范（Swagger API文档）

## 项目管理
- 使用Quarto Book进行内容组织和发布
- 保持章节间的连贯性和一致性
- 确保项目的渐进式复杂度递增
- 维护代码示例的可运行性和教学效果
