---
title: "第十章：前端展现 - 为你的服务打造“门面”"
---

> “设计不仅仅是外观和感觉，设计是产品如何运作。” —— 史蒂夫·乔布斯

欢迎来到第十章！至此，我们已经成功地构建了一个功能强大、数据持久的后端服务。这是一个巨大的成就，但它还只是故事的一半。

数据，如果只是以一堆JSON文本的形式存在于API之后，对于普通用户来说是毫无意义的。用户无法直接与Postman这样的工具交互，他们需要一个**图形用户界面 (GUI)**，一个他们可以看、可以点击的“脸面”。这个“脸面”，就是我们常说的**前端 (Frontend)**。

::: {.callout-note title="与AI的对话：从后端到前端"}

**你**：AI，我的后端API现在非常强大，数据也能永久保存了。但我的朋友没法用，他总不能去用Postman吧？我怎么才能让他像访问普通网站一样使用我的服务呢？

**AI助手**：你说到了关键点！服务需要一个用户界面（UI）。从这一章开始，我们将进行一次有趣的角色转换，扮演“前端工程师”的角色，使用Web世界的“三剑客”——HTML、CSS和JavaScript，为你的API打造一个“门面”。用户通过浏览器访问这个门面，门面在背后悄悄地和你的API通信，获取数据并呈现出来。

**你**：这个过程复杂吗？

**AI助手**：这正是**前后端分离**架构的魅力所在。我们的后端（后厨）已经能做出标准化的菜品（API），现在我们只需要专注前厅（前端）的设计，学习如何把菜（数据）漂亮地摆在用户面前。

:::

### 本章项目任务
我们将扮演一名前端工程师，为我们的`IntelliRecommend`项目创建一个最简单的前端交互界面。我们将创建一个`index.html`文件，它包含一个输入框和一个搜索按钮。当用户在输入框中输入关键词并点击按钮时，页面会：

1.  通过JavaScript调用我们在**第九章最终挑战中完成的搜索API** (`/api/contents/search?keyword=...`)。
2.  获取返回的JSON数据。
3.  将数据动态地渲染成一个内容列表，展示在页面上。

### 本章技术重点
1.  **HTML基础**：学习如何使用HTML标签（如`<div>`, `<h1>`, `<input>`, `<button>`）搭建一个最基本的网页骨架。
2.  **JavaScript与Fetch API**：学习如何使用JavaScript的`fetch`函数，从前端异步请求我们自己编写的后端API。
3.  **DOM操作**：学习如何使用JavaScript找到页面上的特定元素，并将从API获取到的数据动态地创建成新的HTML元素，渲染在网页上。

### AI协同实践
*   向AI描述你想要的前端布局，让它为你生成初始的HTML和简单的CSS代码。
*   向AI提问具体的JavaScript问题，例如：“**请帮我写一段JavaScript代码，它能获取ID为`search-input`的输入框的值，然后调用`/api/contents/search`接口，并将返回的JSON数据打印在控制台。**”
*   当你拿到JSON数据后，向AI提问：“**我有一个包含多个对象的JSON数组，如何用JavaScript遍历它，并为每个对象创建一个列表项（`<li>`）添加到一个无序列表（`<ul>`）中？**”

::: {.callout-important}
**本章的学习目标不是成为前端专家！** 前端是一个同样博大精深的领域。本章的目标是让你理解前后端是如何协作的，让你具备**全栈（Full-Stack）**的视野，能够从一个完整的、端到端的角度去思考和构建一个产品。
:::

准备好为你强大的后端服务，打造一个漂亮的前脸了吗？让我们开始吧！ 