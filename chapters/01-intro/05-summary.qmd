## 1.5 复盘与展望 {#sec-intro-summary}

> “学而时习之，不亦说乎？” — 孔子

恭喜你完成了第一章的学习！虽然我们只写了寥寥几行代码，但你已经掌握了与AI协同工作的核心思想，并建立了一套全新的工作流程。

### 你的核心收获：全新的工作流

在本章，你实践了21世纪程序员的核心工作流程：

**想法 -> 指挥 -> 验证**

你不再是代码的“打字员”，而是解决方案的“指挥家”。这个流程将贯穿本书，也是你在未来职业生涯中创造价值的核心模式。

让我们通过与AI的对话，来系统地回顾一下本章所学的Java知识点。

::: {.callout-note title="与AI的对话：复盘本章核心概念"}

**你**：AI，我们这一章都学习了哪些Java的核心概念？

**AI助手**：当然，我们来快速回顾一下。通过创建“个性化问候器”，你已经接触到了Java的几个基石：

*   **`class` (类)**：目前，你可以把它理解为存放我们所有代码的“容器”或“蓝图”。我们的`Greeter`就是一个类。
*   **`main`方法**：这是Java程序的唯一入口。就像一座大厦的正门，程序总是从`main`方法的第一行开始执行。
*   **`System.out.println()`**：这是你向计算机下达“打印到屏幕”命令的方式，是你观察程序内部状态的窗口。
*   **变量与静态类型**：我们用`String name`创建了一个名为`name`的“盒子”，并与程序立下“契约”，这个盒子永远只能放文本。这份“契约”就是**静态类型**，它保证了代码的严谨和安全。
:::

### 下一步的挑战：从过程到对象

我们成功了，但目前的实现方式有一个小问题：数据（`name`变量）和操作（`println`方法）是分离的，都散落在`main`方法中。当程序变复杂后，这会成为一场噩梦。

如何将数据和操作它的方法优雅地“打包”在一起，形成一个真正的“实体”呢？

这个问题的答案，将我们引向编程世界的一次伟大思想飞跃——**面向对象编程**。这将是我们下一章探险的目标。准备好，我们将从写代码，进化到“设计”代码！

---

### 本章综合练习：指挥AI打印你的“数字名片”

这个练习将全面检验你本章所学：如何向AI下达一系列精确指令来完成一个稍复杂的需求。

**目标**：创建一个`DigitalBusinessCard.java`程序，在其中声明姓名、年龄、身高等多个不同类型的变量，并指挥AI将它们组合成一张个人名片打印出来。

**AI协同指引**：

这个任务的核心是练习**分解需求**和**清晰指挥**。你可以尝试分步向AI提问：

1.  “请帮我创建一个`DigitalBusinessCard.java`文件，并包含一个带`main`方法的类。”
2.  “在`main`方法里，帮我声明一个`String`类型的变量`name`并赋值为我的名字，再声明一个`int`类型的变量`age`并赋值为我的年龄。”
3.  “我该如何将'姓名：'这段固定文本和`name`变量的值一起打印出来？”
4.  ...继续这个流程，直到打印出完整的名片。

**预期输出示例**：

```text
--- 我的数字名片 ---
姓名： 张三
年龄： 25
身高： 1.75米
正在学习Java： true
--------------------
```
这个练习将极大地锻炼你与AI协同解决问题的能力。去试试吧！
